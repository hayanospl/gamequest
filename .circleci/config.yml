version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2 

jobs:
  build:
    working_directory: ~/gamequest
    docker:
      - image: circleci/ruby:2.7.1-buster
        environment:
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          # TZ: "Japan"

      - image: circleci/mysql:8.0.22
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_DATABASE: 'ci_test'
          MYSQL_USER: 'root'
          # MYSQL_ROOT_PASSWORD: 'rootpass'

    

    steps:
      - checkout

      - run:
          name: wait for MYSQL_DATABASE
            command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m

      - restore_cache:
          keys:
            - v1-demo-{{ checksum "Gemfile.lock" }}
            - v1-demo-
      
      - run:
          name: setup bundler
            command: |
              sudo gem update --system
              sudo gem uninstall bundler
              sudo rm /usr/local/bin/bundle
              sudo gem install bundler

      - run:
          name: Which bundler?
            command: bundle -v

      - run:
          name: bundle install
            command: |
              bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: setup database
            command: |
              cp -v config/database.ci.yml config/database.yml

      - run: mysql_config --socket
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load

      - run:
          name: run rspec
            command: |
              bundle exec rspec --profile 10 \
                                --format RspecJunitFormatter \
                                --out test_results/rspec.xml \
                                --format progress \
                                $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      
      # collect reports

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: tmp/screenshots
          destination: test-screenshots
